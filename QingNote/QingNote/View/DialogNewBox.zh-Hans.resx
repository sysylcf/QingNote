<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rbtByCategory.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABPtJREFUeF7t
        m1/EVVkYxj8ZIxkZSZIkSTKSJCNJkiRJxsgYSZJ0kXSR0UUSSZIkXSRJukySrroYGWNkJEmSJEmSJEmS
        JEk9v1gsr3evtU7nnH32Pt95+PH5zt777PWstd71rj9nrI+aLS6K1+K6mC/GhSaI3eKd+BJxVwy9Fogb
        Ii54zGQxlPpRHBQfhVfwwFQxdFoq7guvwJacAXPFAbFXNN4smvMp8Vl4hfWoKtQPgkJ/EOHaR2KSaKQ2
        iGciLpzFGkP3oKtY/SJuivjawG+iUZohLgnvZQNvxU7xu4hNOCpiUev7RFzrlo2iEWJo2yUonPeigati
        lghaLGjatJhYjBa3hPeMwFPxk4hFBRBzvJbUNy0SuZd9Kf4UOVHr+0VutLgmZoqgieK4+CT4/ImYI/qu
        rSL3sufFFJETRt4R3jMCtLAdItYS4Y0yfG9fRbNNRXii9CqRE831kAi1V8XfIu4+tBZyi6r7SK/7Jvre
        C+F9MUGLF6NZ5vSryOUI1Pp2EYuR4bbwrg/8L/omcnnvS/8R80ROjN/HRKe1TrDdI1IjQyBnAJV4UlAB
        jFxxTMmK5mW/kD7HC+ZEt6B72PtjvFpn9viv8K73SHUBWtADEV9PrlEkCmlrgFgwXaREIDwn4vs8bK2j
        LSI1xDKzfG/+d1Z42iTsTDRQNBmjoPZGxuSUGAKrYkaAAm4TsUiNLwvv+gA1zRwBk0LFULvWRIItqbm9
        P6ZofuEZgKNe8rFSeN3FQkCjELHWiZRpDL9/ibjb/Sxo3rYrYkZVOh1TZAAXeTefEcvFGsGM7Z7wrrNg
        UJzR8TfP8q4NsHiyUJRorWDVyXuOpSsDvgdqOP5SRhAbnGKINcwZSlJdWgHDcSpXsdRuQNznyf9fCe86
        IL1dIUo0TRBMveekqNWANyIkS0RfCuhdBwyxpctlmPRceM/JUasBF0QQSZF3DZOo0jk/TZ6JVC65SlGr
        AWSTiP7sjfGMDExvS0STZ4Zon9EptRrAMIeWCfsZNV/0MhKjTi7HKKVWA5j+IjIz+1lVFheL+HFCdBLl
        c9RqQJg0MRLYz3IGrBcPhb2vFPICgrD9f60GhFTVM4AuwOQnFlkeCzC51accxBae7RlYqwFh+ukZAOT1
        /wnWEcn8uonuAVpWGHobb0Avwcw46ULjxoDHgtVnq3FhAN3HW5Alv/DS7qExgKGRrNBOixFTdIKsd99Q
        GEDNkhx5YhMmFUxbbwCLHnYlCDGRuiK8e2JabQCLKN46AQsnuUXYQGsNoICeNgu7WJqitQYwpMUqWQD1
        GAoDShdAPVpvwGqRWlbL0WoDOEzR7dS4tQb0ipEBIquRAcK7uVNGBgg0MkB4nw+CIgOYWHg3d0oTDWDd
        sUhV8+lOaJoBbMoWi/V47yGd0CQD2Jcs3W7/JpaZUpuZJTTFgKpls6w4iZnay0/B6Y5wKGJQBqSWzYrF
        cTdOg5SewAgcEUGDMIAYxsSpZ2KzgW3s04KdG7vtxBkijsGyamO/uG4DOD8Yul9fxaIEQ2buxGidBhC8
        S47X1Ko6DOD8QWN+W2DFhqf30r3CO4LXKHFQwnvxXkBMynXBgYv0s+TwcyfQ5P8QrVEvMssAo02jm7wn
        8oluDz4ARja+yVeJrkBa6hUsB4ekwqGr1ouT5aW/NGWjkyP435XLN138/O2w4PwfEy8CGxkmBx5oKez0
        ehuhPdTY2FdOE5xxesjBeAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="rbtByCategory.Text" xml:space="preserve">
    <value>
按照分类：
将卡片收入不同的分类中，如同百科全书</value>
  </data>
  <data name="rbtByChapter.Text" xml:space="preserve">
    <value>
按照章节：
由你决定章节顺序，像一本故事书。</value>
  </data>
  <data name="rbtByTime.Text" xml:space="preserve">
    <value>
按照日期：
像日记一样，记录你每一天的进度。</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>名称：</value>
  </data>
  <data name="txtBoxName.Size" type="System.Drawing.Size, System.Drawing">
    <value>257, 33</value>
  </data>
  <data name="btnCommit.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft YaHei UI, 16.2pt</value>
  </data>
  <data name="btnCommit.Text" xml:space="preserve">
    <value>确定，创建卡盒</value>
  </data>
  <data name="label2.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft YaHei UI, 16.2pt</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>139, 87</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>288, 33</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>选择一种索引方式：</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>位置：</value>
  </data>
  <data name="txtBoxPath.Size" type="System.Drawing.Size, System.Drawing">
    <value>257, 33</value>
  </data>
  <data name="btnBrowse.Text" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="$this.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft YaHei UI, 12pt</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>清笔记 - 创建新卡盒</value>
  </data>
</root>